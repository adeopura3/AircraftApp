Aircraft application

User Operations

- Boot: Initializes the system

- Enqueue: Enqueues the aircraft in the system. The user can specify the type of the aircraft and the size of the aircraft.

- Dequeue: Dequeues the highest priority item from the queue. Passenger aircraft are higher priority than Cargo. Large are higher proprity than small. After priorities, follow FIFO.

Algorithms

- Enqueue: Add in sorted order. Linear O(N)

- Dequeue: Remove the first element from the queue

High level Code organization

- Home Page
    - Route in the routes.js
    - Uses the template home.html
        - Provides a button that the user can use to initialize the system
    - Controller in controller.js
        - Makes use of the Angular location service
        - Makes use of a custom systemBootService
        - Handles the click from the boot system button and redirects to the airTrafficControlAndStatus route
        


- Air Traffic Contorl and Status Page
    - Route in routes.js
    - Uses the template airTrafficControlAndStatus.html
        - Enqueue Panel
        - Dequeue Panel
        - Status Panel (Aircrafts in queue)
    - Controller in controller.js
        - User built in Angular timeout service
        - Uses custom systemBootService and queueManagementService
        - If the page was accessed without the system being booted, redirects to the system boot page
        - Enqueue
            - Two way binding for the aircraft size and aircraft type that are to be enqueued
            - Handles enqueue click and passes on the work to the queueManagementService
            - Shows footer in the panel for 10 seconds once the enqueue is successful (Two way binding)
        - Dequeue
            - If queue is empty, disable the dequeue button via two way binding
            - Handles dequeue click and passes on the work to the queueManagementService to dequeue the highest priority item
            - Shows footer in the panel for 10 seconds once the dequeue is successful (Two way binding)
    